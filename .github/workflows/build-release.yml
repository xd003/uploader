name: Build and Release Go Application

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        
    - name: Initialize Go module
      run: |
        go mod init uploader
        go mod tidy
        
    - name: Build for Windows x64
      env:
        GOOS: windows
        GOARCH: amd64
      run: go build -o uploader.exe uploader.go
      
    - name: Build for Linux x64
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o uploader uploader.go
      
    - name: Build for Linux ARM64
      env:
        GOOS: linux
        GOARCH: arm64
      run: go build -o uploader-arm uploader.go
      
    - name: Get commit SHA
      id: get_sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      
    - name: Get current timestamp
      id: get_time
      run: echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.get_time.outputs.timestamp }}
        release_name: Release ${{ steps.get_time.outputs.timestamp }}
        body: |
          Automated release built from commit ${{ steps.get_sha.outputs.sha }}
          
          **Commit Details:**
          - SHA: ${{ github.sha }}
          - Message: ${{ github.event.head_commit.message }}
          - Author: ${{ github.event.head_commit.author.name }}
          
          **Binaries included:**
          - `uploader.exe` - Windows x64
          - `uploader` - Linux x64  
          - `uploader-arm` - Linux ARM64
        draft: false
        prerelease: false
        
    - name: Upload Windows x64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploader.exe
        asset_name: uploader.exe
        asset_content_type: application/octet-stream
        
    - name: Upload Linux x64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploader
        asset_name: uploader
        asset_content_type: application/octet-stream
        
    - name: Upload Linux ARM64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploader-arm
        asset_name: uploader-arm
        asset_content_type: application/octet-stream
